qfunc main(output ancilla_reg: qnum, output work_reg: qbit) {
  allocate(3, ancilla_reg);
  allocate(1, work_reg);
  unitary([
    [
      0.9317,
      0.3631,
      (-0.0),
      (-0.0),
      (-0.0),
      (-0.0),
      (-0.0),
      (-0.0)
    ],
    [
      0.3504,
      (-0.899),
      0.2628,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0
    ],
    [
      0.0932,
      (-0.2391),
      (-0.9421),
      0.2158,
      0.0,
      0.0,
      0.0,
      0.0
    ],
    [
      0.0202,
      (-0.0519),
      (-0.2046),
      (-0.9591),
      0.1874,
      0.0,
      0.0,
      0.0
    ],
    [
      0.0038,
      (-0.0098),
      (-0.0385),
      (-0.1803),
      (-0.9684),
      0.1678,
      0.0,
      0.0
    ],
    [
      0.0006,
      (-0.0016),
      (-0.0065),
      (-0.0303),
      (-0.1629),
      (-0.9742),
      0.1532,
      0.0
    ],
    [
      0.0001,
      (-0.0003),
      (-0.001),
      (-0.0047),
      (-0.025),
      (-0.1496),
      (-0.9784),
      0.1407
    ],
    [
      0.0,
      (-0.0),
      (-0.0001),
      (-0.0007),
      (-0.0036),
      (-0.0213),
      (-0.1391),
      (-0.99)
    ]
  ], ancilla_reg);
  H(work_reg);
  repeat (i: 8) {
    if ((i % 2) != 0) {
      control (ancilla_reg == i) {
        Y(work_reg);
      }
    }
  }
  unitary([
    [
      0.9317,
      0.3504,
      0.0932,
      0.0202,
      0.0038,
      0.0006,
      0.0001,
      0.0
    ],
    [
      0.3631,
      (-0.899),
      (-0.2391),
      (-0.0519),
      (-0.0098),
      (-0.0016),
      (-0.0003),
      (-0.0)
    ],
    [
      (-0.0),
      0.2628,
      (-0.9421),
      (-0.2046),
      (-0.0385),
      (-0.0065),
      (-0.001),
      (-0.0001)
    ],
    [
      (-0.0),
      0.0,
      0.2158,
      (-0.9591),
      (-0.1803),
      (-0.0303),
      (-0.0047),
      (-0.0007)
    ],
    [
      (-0.0),
      0.0,
      0.0,
      0.1874,
      (-0.9684),
      (-0.1629),
      (-0.025),
      (-0.0036)
    ],
    [
      (-0.0),
      0.0,
      0.0,
      0.0,
      0.1678,
      (-0.9742),
      (-0.1496),
      (-0.0213)
    ],
    [
      (-0.0),
      0.0,
      0.0,
      0.0,
      0.0,
      0.1532,
      (-0.9784),
      (-0.1391)
    ],
    [
      (-0.0),
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.1407,
      (-0.99)
    ]
  ], ancilla_reg);
}
