qfunc apply_U_m(y: qnum, x: qbit) {
  control (y == 0) {
    unitary([[1, 0], [0, 1]], x);
  }
  control (y == 1) {
    unitary([[0, 1], [(-1), 0]], x);
  }
  control (y == 2) {
    unitary([[(-1), 0], [0, (-1)]], x);
  }
  control (y == 3) {
    unitary([[0, (-1)], [1, 0]], x);
  }
  control (y == 4) {
    unitary([[1, 0], [0, 1]], x);
  }
  control (y == 5) {
    unitary([[0, 1], [(-1), 0]], x);
  }
  control (y == 6) {
    unitary([[(-1), 0], [0, (-1)]], x);
  }
  control (y == 7) {
    unitary([[0, (-1)], [1, 0]], x);
  }
}

qfunc main(output x: qbit, output z: qnum) {
  allocate(3, z);
  allocate(1, x);
  hadamard_transform(x);
  unitary([
    [
      (0.6065 + 0j),
      ((-0.2205) + 0j),
      ((-0.2056) + 0j),
      (0.1021 + 0j),
      (0.4317 + 0j),
      ((-0.4503) + 0j),
      (0.1546 + 0j),
      ((-0.3431) + 0j)
    ],
    [
      (0.6065 + 0j),
      (0.1372 + 0j),
      (0.2705 + 0j),
      ((-0.57) + 0j),
      ((-0.242) + 0j),
      ((-0.0468) + 0j),
      ((-0.0404) + 0j),
      (0.3909 + 0j)
    ],
    [
      (0.4289 + 0j),
      ((-0.1311) + 0j),
      ((-0.1034) + 0j),
      (0.5235 + 0j),
      ((-0.6135) + 0j),
      (0.3397 + 0j),
      (0.0972 + 0j),
      ((-0.1137) + 0j)
    ],
    [
      (0.2476 + 0j),
      ((-0.057) + 0j),
      (0.0484 + 0j),
      (0.0592 + 0j),
      (0.5616 + 0j),
      (0.7191 + 0j),
      ((-0.2977) + 0j),
      (0.0917 + 0j)
    ],
    [
      (0.1238 + 0j),
      (0.6692 + 0j),
      ((-0.2604) + 0j),
      (0.3705 + 0j),
      (0.0449 + 0j),
      ((-0.256) + 0j),
      ((-0.4523) + 0j),
      (0.2439 + 0j)
    ],
    [
      (0.0554 + 0j),
      (0.6764 + 0j),
      (0.0718 + 0j),
      ((-0.1626) + 0j),
      (0.0445 + 0j),
      (0.251 + 0j),
      (0.4297 + 0j),
      ((-0.5081) + 0j)
    ],
    [
      (0.0226 + 0j),
      ((-0.006) + 0j),
      (0.7701 + 0j),
      (0.1764 + 0j),
      ((-0.0469) + 0j),
      ((-0.1646) + 0j),
      ((-0.4297) + 0j),
      ((-0.4018) + 0j)
    ],
    [
      (0.0085 + 0j),
      (0.0817 + 0j),
      (0.4534 + 0j),
      (0.4385 + 0j),
      (0.2389 + 0j),
      ((-0.0829) + 0j),
      (0.55 + 0j),
      (0.4785 + 0j)
    ]
  ], z);
  apply_U_m(z, x);
  unitary([
    [
      (0.6065 - 0j),
      (0.6065 - 0j),
      (0.4289 - 0j),
      (0.2476 - 0j),
      (0.1238 - 0j),
      (0.0554 - 0j),
      (0.0226 - 0j),
      (0.0085 - 0j)
    ],
    [
      ((-0.2205) - 0j),
      (0.1372 - 0j),
      ((-0.1311) - 0j),
      ((-0.057) - 0j),
      (0.6692 - 0j),
      (0.6764 - 0j),
      ((-0.006) - 0j),
      (0.0817 - 0j)
    ],
    [
      ((-0.2056) - 0j),
      (0.2705 - 0j),
      ((-0.1034) - 0j),
      (0.0484 - 0j),
      ((-0.2604) - 0j),
      (0.0718 - 0j),
      (0.7701 - 0j),
      (0.4534 - 0j)
    ],
    [
      (0.1021 - 0j),
      ((-0.57) - 0j),
      (0.5235 - 0j),
      (0.0592 - 0j),
      (0.3705 - 0j),
      ((-0.1626) - 0j),
      (0.1764 - 0j),
      (0.4385 - 0j)
    ],
    [
      (0.4317 - 0j),
      ((-0.242) - 0j),
      ((-0.6135) - 0j),
      (0.5616 - 0j),
      (0.0449 - 0j),
      (0.0445 - 0j),
      ((-0.0469) - 0j),
      (0.2389 - 0j)
    ],
    [
      ((-0.4503) - 0j),
      ((-0.0468) - 0j),
      (0.3397 - 0j),
      (0.7191 - 0j),
      ((-0.256) - 0j),
      (0.251 - 0j),
      ((-0.1646) - 0j),
      ((-0.0829) - 0j)
    ],
    [
      (0.1546 - 0j),
      ((-0.0404) - 0j),
      (0.0972 - 0j),
      ((-0.2977) - 0j),
      ((-0.4523) - 0j),
      (0.4297 - 0j),
      ((-0.4297) - 0j),
      (0.55 - 0j)
    ],
    [
      ((-0.3431) - 0j),
      (0.3909 - 0j),
      ((-0.1137) - 0j),
      (0.0917 - 0j),
      (0.2439 - 0j),
      ((-0.5081) - 0j),
      ((-0.4018) - 0j),
      (0.4785 - 0j)
    ]
  ], z);
}
